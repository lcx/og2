version: '3.4'

services:
  app: &app
    build:
      context: .
      dockerfile: ./.dockerdev/Dockerfile
      args:
        RUBY_VERSION: '3.1.2'
        PG_MAJOR: '14'
        BUNDLER_VERSION: '2.3.19'
    image: og2:0.1.0
    tmpfs:
      - /tmp

  backend: &backend
    <<: *app
    stdin_open: true
    tty: true
    volumes:
      - .:/app:cached
      - rails_cache:/app/tmp/cache
      - bundle:/bundle
      - node_modules:/app/node_modules
      - .dockerdev/.psqlrc:/root/.psqlrc:ro
    environment:
      NODE_ENV: development
      RAILS_ENV: ${RAILS_ENV:-development}
      DATABASE_URL: postgres://postgres:postgres@postgres:5432
      BOOTSNAP_CACHE_DIR: /bundle/bootsnap
      WEB_CONCURRENCY: 1
      HISTFILE: /app/log/.bash_history
      PSQL_HISTFILE: /app/log/.psql_history
      SELENIUM_REMOTE_HOST: selenium
      LOCALE: de
      EDITOR: vi
    depends_on:
      - postgres

  runner:
    <<: *backend
    command: /bin/bash
    ports:
      - '3000:3000'
      - '3002:3002'

  rspec:
    <<: *backend
    ports:
      - "43447:43447"
    depends_on:
      - postgres
      - selenium

  rails:
    <<: *backend
    command: bundle exec rails server -b 0.0.0.0
    ports:
      - '3000:3000'

  selenium:
    image: selenium/standalone-chrome

  sidekiq:
    <<: *backend
    command: bundle exec sidekiq -C config/sidekiq.yml

  postgres:
    image: postgres:14
    volumes:
      - .psqlrc:/root/.psqlrc:ro
      - postgres:/var/lib/postgresql/data
      - ./log:/root/log:cached
    environment:
      PSQL_HISTFILE: /app/log/.psql_history
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - 5432

volumes:
  postgres:
  bundle:
  node_modules:
  rails_cache: